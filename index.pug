- var STRINGS = 6;
- var FRETS = 22;

doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible' content='IE=edge')
    meta(name='viewport' content='width=device-width, initial-scale=1')

    link(rel='stylesheet' type='text/css' href='./assets/css/app.css')
    script(type='text/javascript' src='https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js')
    script(type='text/javascript' src='./assets/js/tonal.min.js')
    //- TODO: need to build tonal detect
    script(type='text/javascript' src='./assets/js/tonal.detect.js')
    script(type='text/javascript' src='./assets/js/sprintf.js')
    script(type='text/javascript' src='./__javascript__/app.js')
    //- (#15) Workaround.
    script(type='text/javascript' src='./app.min.js')
  body
    #app
      #quicklist(v-if='quicklist.visible')
        div.right Quick access list
        ul
          li(v-for='(col, index) in quicklist.collections')
            span.clickable(
                v-on:click='quicklist.remove(index)'
                v-bind:title='"Remove " + col[0]'
            ) X
            span.clickable(
                v-on:click='col[0] == "scale" ? ' +
                    'scale.setRootAndScale(col[1], col[2]) : ' +
                    'chord.setRootAndChord(col[1], col[2])'
            )  {{ quicklist.displayStr(col) }}
          span.clickable(
              v-on:click='quicklist.clearAll()'
              title="Clear list") clear

      #settingsBtn.selectable.clickable(
        v-on:click='config.toggleSettings()') Options

      #settings(v-if='config.open_settings')
        h3 Options

        div
          input(type='checkbox' id='checkbox' v-model='config.simple_chords')
          label(for='checkbox')  Show simple chords only

        div
          fieldset
            legend Instrument
            div(v-for='instrument in VUE_CONSTANTS.INSTRUMENTS')
              input(
                  type='radio'
                  v-bind:id='"instrumentSelect" + instrument.value' 
                  v-model="config.instrument"
                  v-bind:value='instrument.value')
              label(v-bind:for='"instrumentSelect" + instrument.value')
                | {{ instrument.text }} 

      #main
        h3 Fretboard
        #fretboard
          table(v-bind:class='{ ' +
              'guitar: config.instrument == "guitar", ' +
              'ukulele: config.instrument == "ukulele", ' +
              '}')
            //- Fret number indicators
            tr
              td.fretnumber(v-for='fret in fretboard.frets[0]')
                span(v-if='fret.marker') {{ fret.fret_number }}
            //- Fretboard
            tr(v-for='string in fretboard.frets')
              td.note(
                  v-for='fret in string'
                  v-bind:class='{' +
                      'show: fret.note.selected, ' +
                      'root: fret.note.interval_to_tonic == "1P", ' +
                      'bluenote: fret.note.interval_to_tonic == "4A", ' +
                      'fretmarker: fret.marker,' +
                      '}'
              )
                | {{ fret.note.note }}
                sub.interval  {{ fret.note.interval_to_tonic }}

        br
        br

        h3 Notes
        #notes
          div Scale
            table
              tr
                td.selectable(
                    v-for='note in scale.all_notes'
                    v-bind:class='{ ' +
                        'selected: note.selected, ' +
                        ' }'
                ) {{ note.note }}
                td.clickable(
                    v-on:click='quicklist.add(["scale", scale.root.note, scale.scale])'
                    title='Add scale to quick access list'
                ) +
              tr
                td.selectable(
                    v-for='note in scale.all_notes'
                    v-bind:class='{ ' +
                        'selected: note.selected, ' +
                        '}'
                ) {{ note.interval_to_tonic }}
          br
          div Chord
            table
              tr
                td.selectable.alternate(
                    v-for='note in chord.all_notes'
                    v-bind:class='{ ' +
                        'selected: note.selected, ' +
                        ' }'
                ) {{ note.note }}
                td.clickable(
                    v-on:click='quicklist.add(["chord", chord.root.note, chord.chord])'
                    title='Add chord to quick access list'
                ) +
              tr
                td.selectable.alternate(
                    v-for='note in chord.all_notes'
                    v-bind:class='{ ' +
                        'selected: note.selected, ' +
                        '}'
                ) {{ note.interval_to_tonic }}


        br
        br

        h3 Selector
        #selector
          table
            tr
              td(colspan='3') Scale
              td(colspan='3') Chord
            tr(v-for='row in VUE_CONSTANTS.SCALE_SELECTORS')
              //- Root notes in column 0
              td.selectable.clickable(v-if='row[0]'
                  v-bind:class='{ selected: scale.root.note == row[0]}'
                  v-on:click='scale.setRoot(row[0]); fretboard.showNotes(scale)'
              ) {{ row[0] }}
              td(v-else)

              //- Scales in column 1
              td.selectable.clickable(v-if='row[1]'
                  v-bind:class='{ selected: scale.scale == row[1]}'
                  v-on:click='scale.setScale(row[1]); fretboard.showNotes(scale)'
              ) {{ row[1] }}
              td(v-else)

              //- Scale intervals
              td.selectable.clickable(v-if='row[1]'
                  v-bind:class='{ selected: scale.scale == row[1]}'
                  v-on:click='scale.setScale(row[1]); fretboard.showNotes(scale)'
              ) {{ Tonal.Scale.intervals(row[1]).join(' ') }}

              //- Root notes
              td.selectable.clickable.alternate(v-if='row[0]'
                  v-bind:class='{ selected: chord.root.note == row[0]}'
                  v-on:click='chord.setRoot(row[0]); fretboard.showNotes(chord)'
              ) {{ row[0] }}
              td(v-else)

              //- Chords in column 2
              td.selectable.clickable.alternate(
                  v-if='row[2]'
                  v-bind:class='{ selected: chord.chord == row[2] }'
                  v-on:click='chord.setChord(row[2]); fretboard.showNotes(chord)'
              ) {{ row[2] }}
              td(v-else)

              //- Chord intervals
              td.selectable.clickable.alternate(
                  v-if='row[2]'
                  v-bind:class='{ selected: chord.chord == row[2] }'
                  v-on:click='chord.setChord(row[2]); fretboard.showNotes(chord)'
                  ) {{ Tonal.Chord.intervals(row[2]).join(' ') }}
              td(v-else)

        br
        br

        h3 Chords in scale
        #scaleChords
          table
            tr
              td.selectable(
                  v-for='note in scale.all_notes'
                  v-bind:class='{ selected: note.selected, }'
              ) {{ note.note }}
            tr(v-for='chord_names in scale.all_chords_transposed')
              //- index used to identify root note for chord.
              td.selectable.clickable.alternate(
                  v-for='(chord_name, index) in chord_names'
                  v-bind:class='{ ' +
                      'selected: chord.root.note == scale.all_notes[index].note ' +
                      '&& chord.chord == chord_name }'
                  v-on:click='chord.setRoot(scale.all_notes[index].note).setChord(chord_name)'
              ) {{ chord_name }}
